# Workflow's name
name: Build Application for Windows

# Workflow's trigger
on: 
  push: # push 操作
    branches: # 分支
      - master # 主分支
    paths: # 路径
      - logs/jdc-1.md # 监听logs目录下所有的jdc-1.md操作
  watch:                              # 监视操作
    types: [started]                  # 点击 star 之后
  release:
    types: [published]

# Workflow's jobs
jobs:
  # job's id
  publish:
    # job's name
    name: Build and Publish Release
    # the type of machine to run the job on
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - artifact_name: ./artifact/x86/snander.exe
            asset_name: SNANDer-Windows-32bit.exe
          - artifact_name: ./artifact/x64/snander.exe
            asset_name: SNANDer-Windows-64bit.exe

    if: github.event.repository.owner.id == github.event.sender.id

    # create steps
    steps:
      # step1: Check out Git Repository
      - name: Check out Git Repository
        uses: actions/checkout@v2
        with:
          ref: master

      # step2: Prepare Compilation Environment
      - name: Prepare Compilation Environment
        env:
          DEBIAN_FRONTEND: noninteractive
        run: |
          sudo -E apt-get update
          sudo -E apt-get install -y pkg-config mingw-w64 tar wget make

      # step3: Build App
      - name: Build App
        run: |
          ./build-for-windows.sh

      # step4: Prepare Artifact
      - name: Prepare Artifact
        run: |
          mkdir -p ./artifact/
          cp -rf ./build/x86 ./artifact/
          cp -rf ./build/x64 ./artifact/

      # step5: Publish Release
      - name: Publish Release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: ${{ matrix.artifact_name }}
          asset_name: ${{ matrix.asset_name }}
          tag: ${{ github.ref }}
          overwrite: true
